<script src="/js/d3.min.js"></script>
<script src="/js/line-graph.js"></script>
<script src="/js/sample_data.js"></script>
<div class="container">
    <section class="main">
        <div>
            <h1>Temperature</h1>
        </div>
        <div id="graph1" class="aGraph" style="position:relative;width:100%;height:400px"></div>

    </section>
</div>
<style>
    .line-graph text {
        cursor: default;
    }

    .line-graph .hover-line {
        stroke: #6E7B8B;
    }

    .line-graph .hide {
        opacity: 0;
    }

    .line-graph .axis {
        shape-rendering: crispEdges;
    }

    .line-graph .x.axis line {
        stroke: #D3D3D3;
    }

    .line-graph .x.axis .minor {
        stroke-opacity: .5;
    }

    .line-graph .x.axis path {
        display: none;
    }

    .line-graph .x.axis text {
        font-size: 10px;
    }

    .line-graph .y.axis line, .y.axis path {
        fill: none;
        stroke: #000;
    }

    .line-graph .y.axis text {
        font-size: 12px;
    }

    .line-graph .scale-button:not(.selected):hover {
        text-decoration: underline;
        cursor: pointer !important;
    }

    .line-graph .date-label {
        fill: #6E7B8B;
    }
</style>
<script>
    data2["displayNames"] = ["Temperature"];
    data2["colors"] = ["red"];
    data2["scale"] = "linear";//data["scale"] = "pow";
    data2["displayScale"] = false;
    data2["displayData"] = false;
    data2["displayLegend"] = true;

    var l1 = new LineGraph({containerId: 'graph1', data: data2});
    var socket = io();
    io.socket.on('connect', function () {
        socket.emit('addSensor', [1], ['TEM']);
    });

    io.socket.on('updatechart', function (dataSocket) {

        // Add new
        var newData = [];

        data2.values[0].shift();
        console.log(dataSocket);
        if(dataSocket != {}){
            newData = [[dataSocket.TEM.tem]];
        }

        //newData = [[Math.random()*20],[Math.random()*20],[Math.random()*20]];

        dataV.values = newData;
        dataV.start = dataV.start + dataV.step;
        dataV.end = dataV.end + dataV.step;

        l1.slideData(dataV);

    });
</script>
<!--SCRIPTS-->
