<link href="../styles/bootstrap.min.css" rel="stylesheet" type="text/css">
<div class="container">
  <h1><%= title %></h1>
  <hr>
  <style type="text/css">
    body {
      margin-top: 40px;
    }

    .stepwizard-step p {
      margin-top: 10px;
    }

    .stepwizard-row {
      display: table-row;
    }

    .stepwizard {
      display: table;
      width: 50%;
      position: relative;
    }

    .stepwizard-step button[disabled] {
      opacity: 1 !important;
      filter: alpha(opacity=100) !important;
    }

    .stepwizard-row:before {
      top: 14px;
      bottom: 0;
      position: absolute;
      content: " ";
      width: 100%;
      height: 1px;
      background-color: #ccc;
      z-order: 0;
    }

    .stepwizard-step {
      display: table-cell;
      text-align: center;
      position: relative;
    }

    .btn-circle {
      width: 30px;
      height: 30px;
      text-align: center;
      padding: 6px 0;
      font-size: 12px;
      line-height: 1.428571429;
      border-radius: 15px;
    }
  </style>
  <div id="jsoneditor">
    <div class="form-group new form-horizontal">
      <div class="container">
        <div class="stepwizard col-md-offset-3">
          <div class="stepwizard-row setup-panel">
            <div class="stepwizard-step">
              <a href="#step-1" type="button" class="btn btn-circle btn-default btn-primary">1</a>
              <p>Step 1</p></div>
            <div class="stepwizard-step">
              <a href="#step-2" type="button" class="btn btn-circle btn-default">2</a>
              <p>Step 2</p></div>
            <div class="stepwizard-step">
              <a href="#step-3" type="button" class="btn btn-circle btn-default">3</a>
              <p>Step 3</p></div>
            <div class="stepwizard-step">
              <a href="#step-4" type="button" class="btn btn-circle btn-default">4</a>
              <p>Step 4</p></div>
          </div>
        </div>
        <div id="step-1" class="row setup-content" style="display: block;">
          <div class="col-xs-6 col-md-offset-3">
            <div class="col-md-12"><h3>Step 1</h3>

              <div class="form-group"><label class="col-sm-2 control-label">COM</label>

                <div class="col-sm-10"><select id="comSelected" class="form-control" required="required"
                                               name="ComSelect">
                    <% _.forEach(listSerialPorts, function(listSerialPorts) { %>
                    <option value="<%= listSerialPorts.comName %>"><%= listSerialPorts.comName %></option>
                    <% }) %>
                  </select>
                </div>
              </div>
              <button id="submitCOM" type="button" class="btn btn-primary nextBtn btn-lg pull-right">Next</button>
            </div>
          </div>
        </div>
        <div id="step-2" class="row setup-content" style="display: none;">
          <div class="col-xs-6 col-md-offset-3">
            <div class="col-md-12"><h3>Step 2</h3>

              <div class="form-group"><label class="col-sm-2 control-label">SensorsID</label>

                <div class="col-sm-10"><select class="form-control" required="required" name="sensorsID"
                                               id="sensorsID"></select></div>
              </div>
              <button type="button" class="btn btn-primary nextBtn btn-lg pull-right">Next</button>
            </div>
          </div>
        </div>
        <div id="step-3" class="row setup-content" style="display: none;">
          <div class="col-xs-6 col-md-offset-3">
            <div class="col-md-12"><h3>Step 3</h3>

              <div class="form-group"><label class="col-sm-2 control-label">PeersID</label>

                <div class="col-sm-10"><select class="form-control" required="required" name="peersID"
                                               id="peersID"></select></div>
              </div>
              <button type="button" class="btn btn-primary nextBtn btn-lg pull-right">Next</button>
            </div>
          </div>
        </div>
        <div id="step-4" class="row setup-content" style="display: none;">
          <div class="col-xs-6 col-md-offset-3">
            <div class="col-md-12"><h3>Step 4</h3>

              <div class="form-group"><label class="col-sm-2 control-label">Type</label>

                <div class="col-sm-10">
                  <input type="text" id="type" placeholder="type" class="form-control"
                         required="required" maxlength="200" name="type" disabled>
                </div>
                <label class="col-sm-2 control-label">Enabled</label>

                <div class="col-sm-10"><input type="checkbox" id="enabled" placeholder="enabled"
                                              class="col-sm-2 form-control" required="required" maxlength="200"
                                              name="enabled"></div>
                <label class="col-sm-2 control-label">fa</label>

                <div class="col-sm-10"><input type="text" id="fa" placeholder="fa" class="form-control"
                                              required="required" maxlength="200" name="fa"></div>
              </div>
              <button type="submit" onclick="saveChangedJSON()" class="btn btn-success btn-lg pull-right">Submit</button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <hr>
</div>
<script>
  var jsonData;
  var editor;

  function saveJSON() {
    var list = diffJSON(jsonData, editor.getValue());

    console.log(jsonData);
    console.log(editor.getValue());
    console.log(list);

    $.ajax({
      url: "/status/update",
      type: "post",
      data: {listSensors: JSON.stringify(list)},
      success: function (data, textStatus, jqXHR) {
        alert("Guardado!");
      },
      error: function (jqXHR, textStatus, errorThrown) {
        console.log("ERROR");
      }
    });
  }

  function saveChangedJSON() {
    var sensorsID= $("#sensorsID option:selected").text();
    var peersID = $("#peersID option:selected").text();
    var enabled = $("#enabled").prop('checked');
    var fa = $("#fa").val();
    var list = '{ "'+sensorsID+'" :{"listPeers":{"0":{"idPeer":"'+peersID+'","listConf":{"0":{"enabled":"'+enabled+'","fa":"'+fa+'"}}}}}}';

    $.ajax({
      url: "/status/update",
      type: "post",
      data: {listSensors: list},
      success: function (data, textStatus, jqXHR) {
        alert("Guardado!");
      },
      error: function (jqXHR, textStatus, errorThrown) {
        console.log("ERROR");
      }
    });
  }
</script>
<script type="text/javascript">
  function createForm() {
    var navListItems = $('div.setup-panel div a'),
      allWells = $('.setup-content'),
      allNextBtn = $('.nextBtn');

    allWells.hide();

    navListItems.click(function (e) {
      e.preventDefault();

      var $target = $($(this).attr('href')),
        $item = $(this);

      if (!$item.hasClass('disabled')) {
        navListItems.removeClass('btn-primary').addClass('btn-default');
        $item.addClass('btn-primary');
        allWells.hide();
        $target.show();
        $target.find('input:eq(0)').focus();
      }
    });

    allNextBtn.click(function () {
      var curStep = $(this).closest(".setup-content"),
        curStepBtn = curStep.attr("id"),
        nextStepWizard = $('div.setup-panel div a[href="#' + curStepBtn + '"]').parent().next().children("a"),
        curInputs = curStep.find("input[type='text'],input[type='url'],textarea[textarea]"),
        isValid = true;

      $(".form-group").removeClass("has-error");
      for (var i = 0; i < curInputs.length; i++) {
        if (!curInputs[i].validity.valid) {
          isValid = false;
          $(curInputs[i]).closest(".form-group").addClass("has-error");
        }
      }

      if (nextStepWizard.parent().children("p").text() == "Step 2") {
         $.ajax({
          url: "/status/getAllInformation",
          type: "post",
          data: {portCom: $('#comSelected').val()},
          success: function (data, textStatus, jqXHR) {

            console.log(data);
            jsonData = JSON.parse(data);

            for (var sensors in jsonData) {
              console.log(sensors);
              var IDs = Object.keys(jsonData[sensors]);
              console.log(IDs);
              $("#sensorsID").empty();
              for (var i = 0; i < IDs.length; i++) {
                if (IDs[i] == "id") {
                  console.log(jsonData[sensors][IDs[i]]);
                  $("#sensorsID").append(
                    $('<option />', {value: jsonData[0][IDs[i]], text: jsonData[0][IDs[i]]})
                  )
                }
              }
            }
          },
          error: function (jqXHR, textStatus, errorThrown) {
            console.log("ERROR");
          }
        });
      } else if (nextStepWizard.parent().children("p").text() == "Step 3") {

        for (var sensors in jsonData) {
          if (jsonData[sensors].id == $("#sensorsID option:selected").text()) {
            $("#peersID").empty();
            for (var peers in jsonData[sensors].listPeers) {
             $("#peersID").append(
                $('<option />', {
                  value: jsonData[sensors].listPeers[peers].idPeer,
                  text: jsonData[sensors].listPeers[peers].idPeer
                })
              )
            }
          }
        }
      } else if (nextStepWizard.parent().children("p").text() == "Step 4") {
        for (var sensors in jsonData) {
           if (jsonData[sensors].id == $("#sensorsID option:selected").text()) {
            for (var peers in jsonData[sensors].listPeers) {
              if (jsonData[sensors].listPeers[peers].idPeer == $("#peersID option:selected").text()) {
                $("#type").val(jsonData[sensors].listPeers[peers].type);
                $("#enabled").prop("checked", jsonData[sensors].listPeers[peers].listConf[0].enabled);
                $("#fa").val(jsonData[sensors].listPeers[peers].listConf[0].fa);
              }
            }
          }
        }
      }
      if (isValid)
        nextStepWizard.removeAttr('disabled').trigger('click');
    });

    $('div.setup-panel div a.btn-primary').trigger('click');
  }
  createForm();

  $("#saveJSON").click(function () {
    saveJSON();
  });
</script>
<script>
  // http://jsfiddle.net/muJEu/169/
  function isEmpty(o) {
    for (var p in o) {
      if (o.hasOwnProperty(p)) {
        return false;
      }
    }
    return true;
  }

  function diffJSON(obj1, obj2) {
    var ret = {}, rett;
    for (var i in obj2) {
      rett = {};
      if (typeof obj2[i] === 'object') {
        rett = diffJSON(obj1[i], obj2[i]);
        if (!isEmpty(rett)) {
          ret[i] = rett
        }
      } else {
        // Inclui idPeer
        if (!obj1 || !obj1.hasOwnProperty(i) || obj2[i] !== obj1[i] || i == 'idPeer') {
          ret[i] = obj2[i];
        }
      }
    }
    return ret;
  }
</script>
